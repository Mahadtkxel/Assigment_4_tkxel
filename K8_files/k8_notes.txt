K8 components:
each pod gets own IP address.
new IP is assigned each time a POD is recreated.

Service:
- Service component is used for static IP.
- also acts as a loadbalancer and forwards request to the pod that is least busy.

configMap:
external configuration of your application

Secret:
base64 encoded.

Worker Node processes:
3 Node processes
1) Kubelet
2) kube proxy
3) Container Runtime

Master nodes:
4 processes
1) api-server
it is the cluster gateway.

2) Scheduler
It just decides on which Node new Pod should be scheduled
kubelet actually makes the pods

3) Controller Manager
Detect state changes

4) Etcd
A key:value store. DB/brain of k8. stores state information.
does not store the actual application data.


K8 component config file has 3 main parts:
1) metadata
2) spec
3) status (auto generated by K8 and assigned)

The order of creation matters regarding deployments and secrets. Secrets/ConfigMap need to be created first.


K8 Namespaces:
4 default Namespaces in K8.
1) kube-system (master, system processes)
2) kube-public (a configmap that contains cluster info)
3) kube-node-lease (heartbeats of nodes, each node has associated lease object in namespace, determines the availability of a node)
4) Default 

Each namespace will have to create its own configMap and secrets, they cannot be shared between Namespaces. Service, however can be shared between the Namespaces.
There are some components that are global and cannot be namespaced like volumes, node etc.


K8 ingress:
To enable ingress routing we first need to have an ingress controller pod which communicates with ingress service. On cloud, a cloud native loadbalancer is in front
of the ingress controller pod.

after writing dashboard ingress, go to /etc/hosts file and add IP to match the domain name.



